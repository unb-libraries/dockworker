name: Run end-to-end tests

on:
  workflow_call:
    inputs:
      postman-test-url:
        type: string
        required: true
    secrets:
      DOCKER_CLOUD_USER_NAME:
        required: true
      DOCKER_CLOUD_ACCESS_TOKEN:
        required: true
      GH_CONTAINER_REGISTRY_USER:
        required: true
      GH_CONTAINER_REGISTRY_TOKEN:
        required: true
      POSTMAN_API_KEY:
        required: true
      POSTMAN_TEST_GENERATION_COLLECTION_ID:
        required: true
      POSTMAN_TEST_GENERATION_ENVIRONMENT_ID:
        required: true
      POSTMAN_WORKSPACE_ID:
        required: true

jobs:
  test-unit:
    name: Run API tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - 
        name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: FranzDiebold/github-env-vars-action@v2
      - uses: unb-libraries/install-dockworker-composite-action@2.x
      -
        name: Install test dependencies
        run: npm install
        shell: bash
      -
        name: Download docker-compose
        uses: actions/download-artifact@v3
        with:
          name: docker-compose
      -
        name: Login to GHCR
        run: echo $GH_CONTAINER_REGISTRY_TOKEN | docker login ghcr.io -u $GH_CONTAINER_REGISTRY_USER --password-stdin
        env:
          GH_CONTAINER_REGISTRY_TOKEN: ${{ secrets.GH_CONTAINER_REGISTRY_TOKEN }}
          GH_CONTAINER_REGISTRY_USER: ${{ secrets.GH_CONTAINER_REGISTRY_USER }}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_CLOUD_USER_NAME }}
          password: ${{ secrets.DOCKER_CLOUD_ACCESS_TOKEN }}
      -
        name: Pull Required Docker Images
        run: docker-compose pull --parallel --quiet
      -
        name: Start container
        run: vendor/bin/dockworker deploy
      - 
        name: Run API tests
        run: |
          npx newman run \
            https://api.getpostman.com/collections/${{ secrets.POSTMAN_TEST_GENERATION_COLLECTION_ID }}?apikey=${{ secrets.POSTMAN_API_KEY }} \
            --environment https://api.getpostman.com/environments/${{ secrets.POSTMAN_TEST_GENERATION_ENVIRONMENT_ID }}?apikey=${{ secrets.POSTMAN_API_KEY }} \
            --env-var "env-workspaceId=${{ secrets.POSTMAN_WORKSPACE_ID }}" \
            --env-var "env-server=${{ inputs.postman-test-url }}"