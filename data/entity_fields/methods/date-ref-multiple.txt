use Drupal\Core\TypedData\Type\DateTimeInterface;

  /**
   * {@inheritdoc}
   */
  public function getDOCKWORKER_FIELD_CAPSCASEs() {
    $values = [];
    foreach ($this->get('DOCKWORKER_FIELD_MACHINE_NAME')->getValue() as $item) {
      $values[] = $item['value'];
    }
    return $values;
  }

  /**
   * {@inheritdoc}
   */
  public function setDOCKWORKER_FIELD_CAPSCASEs(array $DOCKWORKER_FIELD_MACHINE_NAMEs) {
    $this->set('DOCKWORKER_FIELD_MACHINE_NAME', $DOCKWORKER_FIELD_MACHINE_NAMEs);
    return $this;
  }

  /**
   * {@inheritdoc}
   */
  public function addDOCKWORKER_FIELD_CAPSCASE(DateTimeInterface $DOCKWORKER_FIELD_MACHINE_NAME) {
    $this->get('DOCKWORKER_FIELD_MACHINE_NAME')->appendItem($DOCKWORKER_FIELD_MACHINE_NAME);
    return $this;
  }

  /**
   * {@inheritdoc}
   */
  public function removeDOCKWORKER_FIELD_CAPSCASE(DateTimeInterface $DOCKWORKER_FIELD_MACHINE_NAME) {
    $key = array_search($DOCKWORKER_FIELD_MACHINE_NAME, $this->getDOCKWORKER_FIELD_CAPSCASEs());
    if (!empty($key)) {
      $this->get('DOCKWORKER_FIELD_MACHINE_NAME')->removeItem($key);
    }
    return $this;
  }

  /**
   * {@inheritdoc}
   */
  public function clearDOCKWORKER_FIELD_CAPSCASEs() {
    $this->setDOCKWORKER_FIELD_CAPSCASEs([]);
    return $this;
  }
